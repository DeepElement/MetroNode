<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <MetroNodeScriptFileName>.metro.node.js</MetroNodeScriptFileName>
    <MetroBrowserifyIsStandAlone Condition=" '$(MetroBrowserifyIsStandAlone)' == '' ">false</MetroBrowserifyIsStandAlone>
    <MetroBrowserifyStandAloneNamespace Condition=" '$(MetroBrowserifyStandAloneNamespace)' == '' ">MetroBrowserify</MetroBrowserifyStandAloneNamespace>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <MetroNodeBuildDependsOn>
        MetroNode_NPM_Init;
        MetroNode_Clean_Cache;
        MetroNode_Compile;
        MetroNode_Create_EntryModule;
        MetroNode_Build_EntryModule;
        MetroNode_Update_BOM;
        MetroNode_Package;
    </MetroNodeBuildDependsOn>
  </PropertyGroup>
  
  <Target Name="MetroNodeEntry" AfterTargets="ResotreNpmPkgs;GetPackagingOutputs">
    <CallTarget Targets="MetroNodeBuild" />
    <Message Text="Finale-Files: %(PackagingOutputs.Identity)  TargetPath:%(PackagingOutputs.TargetPath)"  Importance="high" />
  </Target>
 
  <Target Name="MetroNodeBuild" DependsOnTargets="$(MetroNodeBuildDependsOn)">
  </Target>
  
  <Target Name="MetroNode_NPM_Init">
    <Message Text="MetroNode_NPM_Init" />
    <Exec Command="npm install -g browserify@5.13.1" />
  </Target>

  <Target Name="MetroNode_Clean_Cache" DependsOnTargets="MetroNode_NPM_Init">
    <ItemGroup>
      <CacheFiles Include="$(ProjectDir)\**\*.cache" />
      <CacheFiles Include="$(ProjectDir)\$(MetroNodeScriptFileName)" />
    </ItemGroup>
    <Delete Files="@(CacheFiles)" />
  </Target>

  <Target Name="MetroNode_Compile" DependsOnTargets="MetroNode_Build_EntryModule">
    <ItemGroup>
      <JsFiles Include="$(ProjectDir)\**\*.node.js" Exclude="$(ProjectDir)\bin\**\*.*" />
    </ItemGroup>
    <Exec Command="browserify %(JsFiles.Identity) -s MetroNode -o %(JsFiles.RootDir)%(JsFiles.Directory)%(JsFiles.Filename).js.metrobrowserify.cache" />
  </Target>

  <Target Name="MetroNode_Package" DependsOnTargets="MetroNode_Compile">
     <ItemGroup>
      <_AddToPackageFiles Include="$(ProjectDir)\**\*.metrobrowserify.cache" Exclude="$(ProjectDir)\bin\**\*.*;$(ProjectDir)\bld\**\*.*" ></_AddToPackageFiles>
      <PackagingOutputs Remove="@(PackagingOutputs)" Condition="'%(Extension)'=='.js' AND Exists('%(RootDir)%(Directory)%(Filename)%(Extension).metrobrowserify.cache')"></PackagingOutputs>
      <PackagingOutputs Include="@(_AddToPackageFiles -> '%(FullPath)')">
        <OutputGroup>Content</OutputGroup>
        <ProjectName>$(ProjectName)</ProjectName>
        <TargetPath>%(RecursiveDir)$([System.String]::Copy('%(Filename)').Replace('.metrobrowserify',''))</TargetPath>
      </PackagingOutputs>
    </ItemGroup>
  </Target>

  <Target Name="MetroNode_Update_BOM" DependsOnTargets="MetroNode_Package">
    <WriteLinesToFile Condition="Exists('%(CacheFiles.FullPath)')" File="%(CacheFiles.FullPath)" Lines="$([System.IO.File]::ReadAllText(%(CacheFiles.FullPath)))" Overwrite="true" Encoding="utf-8" />
  </Target>

  <Target Name="MetroNode_Create_EntryModule" DependsOnTargets="MetroNode_Update_BOM">
    <WriteLinesToFile Encoding="ASCII" File="$(MetroNodeScriptFileName)" Lines=" " Overwrite="true" />
    <ItemGroup>
      <MetroNodeEntryModule Include="@(PackagingOutputs)" Condition="'$(FileName)$(Extension)' == $(MetroNodeScriptFileName)" ></MetroNodeEntryModule>
      <PackagingOutputs Remove="@(MetroNodeEntryModule -> '%(FullPath)')" />
      <PackagingOutputs Include="@(MetroNodeEntryModule -> '%(FullPath)')">
        <OutputGroup>ContentFilesProjectOutputGroup</OutputGroup>
        <ProjectName>$(ProjectName)</ProjectName>
        <TargetPath>%(RecursiveDir)%(Filename)%(Extension)</TargetPath>
      </PackagingOutputs>
    </ItemGroup>
  </Target>

  <Target Name="MetroNode_Build_EntryModule" DependsOnTargets="MetroNode_Clean_Cache" >
    <ItemGroup>
      <PackageFiles Include="$(SolutionDir)\node_modules\*\package.json"/>
      <PackageNames Condition="Exists('%(PackageFiles.FullPath)')" Include="$([System.IO.Directory]::GetParent(&quot;%(PackageFiles.RecursiveDir)&quot;).Name)" Exclude="browserify"/>
      <_RequireImportFiles Include="$(ProjectDir)\**\*.node.js" Exclude="$(ProjectDir)\bin\**\*.*" />
      <RequireImportFiles Include="@(_RequireImportFiles)">
        <Namespace>$([System.String]::Copy('%(RecursiveDir)').Replace('\','.'))$([System.String]::Copy('%(FileName)').Replace('.node',''))</Namespace>
        <Module>./$([System.String]::Copy('%(RecursiveDir)').Replace('\','/'))%(FileName)%(Extension)</Module>
      </RequireImportFiles>

      <PreScriptLine Include="line01">
        <Text>
          function a(e,t,n){var r=e,i=t.split("."),s%3Bwhile(i.length>0){s=i.shift()%3Bif(!r[s]){if(i.length>0)r[s]={}%3Belse{r[s]=n}}r=r[s]}}%3B
        </Text>
      </PreScriptLine>
      <PreScriptLineText Include="%(PreScriptLine.Text)" />
    </ItemGroup>

    <RemoveDuplicates Inputs="@(PackageNames)">
      <Output ItemName="UniquePackageNames" TaskParameter="Filtered"/>
    </RemoveDuplicates>

    <!-- Append Pre-script -->
    <WriteLinesToFile Encoding="ASCII" File="$(MetroNodeScriptFileName)" Lines="@(PreScriptLineText)" Overwrite="true" />

    <!-- Exports of Packages -->
    <WriteLinesToFile Encoding="ASCII" File="$(MetroNodeScriptFileName)" Lines="@(UniquePackageNames->'exports.%(Identity)=require(&quot;%(Identity)&quot;);')" Overwrite="false" />

    <!-- Exports of custom libraries -->
    <WriteLinesToFile Encoding="ASCII" File="$(MetroNodeScriptFileName)" Lines="@(RequireImportFiles -> 'a(exports,&quot;%(Namespace)&quot;,require(&quot;%(Module)&quot;));')" Overwrite="false" />
  </Target>
</Project>